{"version":3,"sources":["configuration/Configuration.ts","api/resumeApi.ts","components/resumeHeader/Contact.tsx","components/resumeHeader/Link.tsx","components/resumeHeader/ResumeHeader.tsx","components/resumeBody/aboutMe/AboutMe.tsx","components/resumeBody/workingExperiences/Description.tsx","components/resumeBody/workingExperiences/Position.tsx","components/resumeBody/workingExperiences/Work.tsx","components/resumeBody/workingExperiences/WorkingExperiences.tsx","components/resumeBody/skills/Languages.tsx","components/resumeBody/skills/SkillSets.tsx","components/resumeBody/skills/Skills.tsx","components/resumeBody/education/Education.tsx","components/resumeBody/events/Event.tsx","components/resumeBody/events/Events.tsx","components/resumeBody/ResumeBody.tsx","components/page/factory/FactoryResume.ts","components/page/MyDocument.tsx","components/page/Credit.tsx","components/page/Language.tsx","i18n/i18n.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Configuration","API_URL","window","location","hostname","headers","getResume","language","fetch","method","then","response","json","result","catch","error","console","Contact","props","Icon","icon","className","href","isEMail","value","size","title","Link","URL","ResumeHeader","t","useTranslation","src","alt","firstName","lastName","FaRegEnvelope","email","FaPhoneAlt","homePhone","FaMobileAlt","mobilePhone","DiGithubBadge","githubURL","AboutMe","aboutMe","join","Description","listDescriptions","description","map","item","index","key","listStacks","stacks","Position","compagny","city","startMonth","startYear","endMonth","endYear","Work","workingExperience","Stacks","WorkingExperiences","listWorks","workingExperieces","Languages","listLanguages","languages","SkillSets","itemSkills","skills","Skills","geomaticsSkills","technical","geomatics","CAD","concat","GIS","other","office","computerScience","programmingLanguages","frameworks","tools","Education","listEducation","education","degree","schoolName","Event","building","address","startDate","endDate","Events","listEvents","events","ResumeBody","workingExperiences","educations","FactoryResume","generalInformation","postalCode","province","this","createGeneralInformation","createSkills","data","MyDocument","resumeFactory","state","initializeResume","api","dataResume","setState","createResume","prevProps","React","Component","Credit","target","rel","Language","Fab","color","aria-label","style","position","bottom","right","backgroundColor","onClick","changeLanguage","resources","EN","translation","FR","i18n","use","initReactI18next","init","lng","keySeparator","debug","interpolation","escapeValue","App","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"i/CAAaA,EAAb,kCAAaA,EACJC,QACwB,cAA7BC,OAAOC,SAASC,UAAyD,cAA7BF,OAAOC,SAASC,SACxD,wBACA,6CAJKJ,EAMJK,QAAU,CACf,8BAA+B,IAC/B,+BAAgC,IAChC,eAAgB,oBCPb,IAAMC,EAAY,SAACC,GACxB,OAAOC,MAAM,GAAD,OAAIR,EAAcC,QAAlB,YAA6BM,GAAY,CAAEE,OAAQ,MAAOJ,QAASL,EAAcK,UAC1FK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAYA,KACjBC,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,O,wBCKvBE,EAAuC,SAACC,GACnD,IAAMC,EAAiBD,EAAME,KAE7B,OACE,wBAAIC,UAAU,QACZ,uBAAGC,KAAMJ,EAAMK,QAAU,UAAYL,EAAMM,MAAQ,KACjD,kBAACL,EAAD,CAAME,UAAU,aAAaI,KAAK,QAAQC,MAAOR,EAAMQ,QACtDR,EAAMM,SCRFG,EAAiC,SAACT,GAC7C,IAAMC,EAAiBD,EAAME,KAE7B,OACE,wBAAIC,UAAU,QACZ,uBAAGC,KAAMJ,EAAMU,KACb,0BAAMP,UAAU,iCACd,kBAACF,EAAD,CAAME,UAAU,QAAQI,KAAK,QAAQC,MAAOR,EAAMQ,SAEnDR,EAAMU,OCVFC,EAAuD,SAACX,GAAW,IACtEY,EAAMC,cAAND,EAER,OACE,4BAAQT,UAAU,8BAChB,yBAAKA,UAAU,iCACb,yBACEA,UAAU,iCACVW,IAAI,8FACJC,IAAI,YAEN,yBAAKZ,UAAU,iEACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,4CAA4CH,EAAMgB,UAAY,IAAMhB,EAAMiB,UACxF,yBAAKd,UAAU,cAAcS,EAAE,UAC/B,wBAAIT,UAAU,iBACZ,kBAAC,EAAD,CAASD,KAAMgB,IAAeV,MAAOI,EAAE,SAAUN,MAAON,EAAMmB,MAAOd,SAAS,IAC9E,kBAAC,EAAD,CAASH,KAAMkB,IAAYZ,MAAOI,EAAE,aAAcN,MAAON,EAAMqB,UAAWhB,SAAS,IACnF,kBAAC,EAAD,CAASH,KAAMoB,IAAad,MAAOI,EAAE,eAAgBN,MAAON,EAAMuB,YAAalB,SAAS,MAG5F,yBAAKF,UAAU,kCACb,wBAAIA,UAAU,+BACZ,kBAAC,EAAD,CAAMD,KAAMsB,IAAehB,MAAM,SAASE,IAAKV,EAAMyB,kBC5BtDC,EAAyD,SAAC1B,GAAW,IACxEY,EAAMC,cAAND,EACR,OACE,6BAAST,UAAU,uCACjB,wBAAIA,UAAU,kEAAkES,EAAE,YAClF,yBAAKT,UAAU,0BACb,2BACGS,EAAE,gBAAkB,KACpBZ,EAAM2B,QAAQC,KAAK,WCRjBC,EAAwF,SAAC7B,GAAW,IACvGY,EAAMC,cAAND,EAEFkB,EAAmB9B,EAAM+B,YAAYC,KAAI,SAACC,EAAMC,GAAP,OAAiB,wBAAIC,IAAKD,GAAQD,MAE3EG,EAAapC,EAAMqC,OAAOL,KAAI,SAACC,EAAMC,GAAP,OAClC,wBAAIC,IAAKD,EAAO/B,UAAU,oBACxB,0BAAMA,UAAU,kCAAkC8B,OAItD,OACE,yBAAK9B,UAAU,6BACb,wBAAIA,UAAU,sDAAsDS,EAAE,gBACtE,4BAAKkB,GACL,wBAAI3B,UAAU,sDAAsDS,EAAE,oBACtE,wBAAIT,UAAU,eAAeiC,KCPtBE,EAA2C,SAACtC,GACvD,OACE,yBAAKG,UAAU,oCACb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,+CAA+CH,EAAMQ,OACnE,yBAAKL,UAAU,+BAA+BH,EAAMuC,SAAW,KAAOvC,EAAMwC,OAE9E,yBAAKrC,UAAU,wBACZH,EAAMyC,WAAa,IAAMzC,EAAM0C,UAAY,MAAQ1C,EAAM2C,SAAW,IAAM3C,EAAM4C,WCf5EC,EAAqE,SAAC7C,GACjF,OACE,6BAASG,UAAU,+CACjB,kBAAC,EAAD,CACEK,MAAOR,EAAM8C,kBAAkBtC,MAC/B+B,SAAUvC,EAAM8C,kBAAkBP,SAClCC,KAAMxC,EAAM8C,kBAAkBN,KAC9BC,WAAYzC,EAAM8C,kBAAkBL,WACpCC,UAAW1C,EAAM8C,kBAAkBJ,UACnCC,SAAU3C,EAAM8C,kBAAkBH,SAClCC,QAAS5C,EAAM8C,kBAAkBF,UAEnC,kBAAC,EAAD,CAAab,YAAa/B,EAAM8C,kBAAkBf,YAAaM,OAAQrC,EAAM8C,kBAAkBC,WCZxFC,EAA0F,SAAChD,GAAW,IACzGY,EAAMC,cAAND,EAEFqC,EAAYjD,EAAMkD,kBAAkBlB,KAAI,SAACC,EAAMC,GAAP,OAAiB,kBAAC,EAAD,CAAMY,kBAAmBb,EAAME,IAAKD,OAEnG,OACE,6BAAS/B,UAAU,0CACjB,wBAAIA,UAAU,kEAAkES,EAAE,mBAClF,yBAAKT,UAAU,0BACb,yBAAKA,UAAU,qCAAqC8C,MCZ/CE,EAA6D,SAACnD,GACzE,IAAMoD,EAAgBpD,EAAMqD,UAAUrB,KAAI,SAACC,EAAMC,GAAP,OACxC,wBAAI/B,UAAU,OAAOgC,IAAKD,GACxB,0BAAM/B,UAAU,qCAAqC8B,EAArD,SAIJ,OAAO,wBAAI9B,UAAU,kCAAkCiD,ICP5CE,EAAyE,SAACtD,GACrF,IAAMuD,EAAavD,EAAMwD,OAAOxB,KAAI,SAACC,EAAMC,GAAP,OAClC,wBAAI/B,UAAU,mBAAmBgC,IAAKD,GACpC,0BAAM/B,UAAU,qBAAqB8B,OAIzC,OACE,yBAAK9B,UAAU,qBACb,wBAAIA,UAAU,sCAAsCH,EAAMQ,OAC1D,wBAAIL,UAAU,eAAeoD,KCNtBE,EAAqC,SAACzD,GACjD,IAAM0D,EAAiC1D,EAAM2D,UAAUC,UAAUC,IAAIC,OACnE9D,EAAM2D,UAAUC,UAAUG,IAC1B/D,EAAM2D,UAAUC,UAAUI,OAGpBpD,EAAMC,cAAND,EAER,OACE,6BACE,6BAAST,UAAU,sCACjB,wBAAIA,UAAU,kEAAkES,EAAE,WAClF,yBAAKT,UAAU,0BACb,kBAAC,EAAD,CAAWK,MAAO,SAAUgD,OAAQxD,EAAM2D,UAAUM,SACpD,kBAAC,EAAD,CAAWzD,MAAOI,EAAE,aAAc4C,OAAQE,IAC1C,kBAAC,EAAD,CAAWlD,MAAOI,EAAE,eAAgB4C,OAAQxD,EAAM2D,UAAUO,gBAAgBC,uBAC5E,kBAAC,EAAD,CAAW3D,MAAOI,EAAE,aAAc4C,OAAQxD,EAAM2D,UAAUO,gBAAgBE,aAC1E,kBAAC,EAAD,CAAW5D,MAAOI,EAAE,SAAU4C,OAAQxD,EAAM2D,UAAUO,gBAAgBG,UAG1E,6BAASlE,UAAU,sCACjB,wBAAIA,UAAU,kEAAkES,EAAE,cAClF,yBAAKT,UAAU,0BACb,kBAAC,EAAD,CAAWkD,UAAWrD,EAAMqD,gBCzBzBiB,EAAiE,SAACtE,GAAW,IAChFY,EAAMC,cAAND,EAEF2D,EAAgBvE,EAAMwE,UAAUxC,KAAI,SAACC,EAAMC,GAAP,OACxC,wBAAI/B,UAAU,OAAOgC,IAAKD,GACxB,yBAAK/B,UAAU,kCAAkC8B,EAAKwC,QACtD,yBAAKtE,UAAU,qBAAqB8B,EAAKyC,WAAa,MAAQzC,EAAKO,MACnE,yBAAKrC,UAAU,sBAAsB8B,EAAKS,UAAY,MAAQT,EAAKW,aAIvE,OACE,6BAASzC,UAAU,yCACjB,wBAAIA,UAAU,kEAAkES,EAAE,cAClF,yBAAKT,UAAU,0BACb,wBAAIA,UAAU,iBAAiBoE,MChB1BI,EAAmC,SAAC3E,GAAW,IAClDY,EAAMC,cAAND,EAEFmB,EAAc/B,EAAM+B,YAAYC,KAAI,SAACC,EAAMC,GAAP,OAAiB,wBAAIC,IAAKD,GAAQD,MAE5E,OACE,6BAAS9B,UAAU,0BACjB,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,+CAA+CH,EAAMQ,OACnE,yBAAKL,UAAU,+BAA+BH,EAAMf,SAAS2F,SAAW,KAAO5E,EAAMf,SAAS4F,UAEhG,yBAAK1E,UAAU,wBAAwBH,EAAM8E,UAAY,MAAQ9E,EAAM+E,UAEzE,yBAAK5E,UAAU,6BACb,wBAAIA,UAAU,sDAAsDS,EAAE,gBACtE,4BAAKmB,MChBAiD,EAAuD,SAAChF,GAAW,IACtEY,EAAMC,cAAND,EAEFqE,EAAajF,EAAMkF,OAAOlD,KAAI,SAACC,EAAMC,GAAP,OAClC,kBAAC,EAAD,CACEC,IAAKD,EACL1B,MAAOyB,EAAKzB,MACZuB,YAAaE,EAAKF,YAClB9C,SAAUgD,EAAKhD,SACf6F,UAAW7C,EAAK6C,UAChBC,QAAS9C,EAAK8C,aAIlB,OACE,6BAAS5E,UAAU,yCACjB,wBAAIA,UAAU,kEAAkES,EAAE,WAClF,yBAAKT,UAAU,0BACb,yBAAKA,UAAU,qBAAqB8E,MCF/BE,EAA6C,SAACnF,GACzD,OACE,yBAAKG,UAAU,mBACb,kBAAC,EAAD,CAASwB,QAAS3B,EAAM2B,UACxB,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CAAoB+C,kBAAmBlD,EAAMoF,qBAC7C,kBAAC,EAAD,CAAQF,OAAQlF,EAAMkF,UAExB,yBAAK/E,UAAU,YACb,kBAAC,EAAD,CAAQkD,UAAWrD,EAAMwD,OAAOH,UAAWM,UAAW3D,EAAMwD,OAAOG,YACnE,kBAAC,EAAD,CAAWa,UAAWxE,EAAMqF,iBCxBzBC,EAAb,iHACmCC,GAC/B,OAAIA,GAGG,CACLV,QAAS,GACTrC,KAAM,GACNrB,MAAO,GACPH,UAAW,GACXS,UAAW,GACXJ,UAAW,GACXJ,SAAU,GACVM,YAAa,GACbiE,WAAY,GACZC,SAAU,MAfhB,mCAmBuBjC,GACnB,OAAIA,GAGG,CACLH,UAAW,GACXM,UAAW,CACTM,OAAQ,GACRC,gBAAiB,CACfE,WAAY,GACZD,qBAAsB,GACtBE,MAAO,IAETT,UAAW,CAAEC,IAAK,GAAIE,IAAK,GAAIC,MAAO,QAhC9C,yCAsCI,MAAO,CACLqB,WAAY,GACZE,mBAAoBG,KAAKC,2BACzBT,OAAQ,GACR1B,OAAQkC,KAAKE,eACbR,mBAAoB,GACpBzD,QAAS,MA5Cf,mCAgDsBkE,GAClB,MAAO,CACLR,WAAYQ,EAAKrB,UAAaqB,EAAKrB,UAAkC,GACrEe,mBAAoBG,KAAKC,yBAAyBE,EAAKN,oBACvDL,OAAQW,EAAKX,OAAUW,EAAKX,OAA2B,GACvD1B,OAAQkC,KAAKE,aAAaC,EAAKrC,QAC/B4B,mBAAoBS,EAAKT,mBAAsBS,EAAKT,mBAAmD,GACvGzD,QAASkE,EAAKlE,QAAWkE,EAAKlE,QAA4B,QAvDhE,KCKqBmE,E,kDAGnB,WAAY9F,GAAmB,IAAD,8BAC5B,cAAMA,IAHA+F,mBAEsB,EAE5B,EAAKA,cAAgB,IAAIT,EACzB,EAAKU,MAAQ,EAAKD,cAAcE,mBAHJ,E,gMAOHC,EAAcR,KAAK1F,MAAMX,U,OAA5C8G,E,OACNT,KAAKU,SAASV,KAAKK,cAAcM,aAAaF,I,wLAGvBG,G,0EACnBZ,KAAK1F,MAAMX,WAAaiH,EAAUjH,S,gCACX6G,EAAcR,KAAK1F,MAAMX,U,OAA5C8G,E,OACNT,KAAKU,SAASV,KAAKK,cAAcM,aAAaF,I,sIAKhD,OACE,6BAAShG,UAAU,gDACjB,yBAAKA,UAAU,6DACb,kBAAC,EAAD,CACEa,UAAW0E,KAAKM,MAAMT,mBAAmBvE,UACzCC,SAAUyE,KAAKM,MAAMT,mBAAmBtE,SACxC4D,QAASa,KAAKM,MAAMT,mBAAmBV,QACvCrC,KAAMkD,KAAKM,MAAMT,mBAAmB/C,KACpCiD,SAAUC,KAAKM,MAAMT,mBAAmBE,SACxCD,WAAYE,KAAKM,MAAMT,mBAAmBC,WAC1CjE,YAAamE,KAAKM,MAAMT,mBAAmBhE,YAC3CF,UAAWqE,KAAKM,MAAMT,mBAAmBlE,UACzCF,MAAOuE,KAAKM,MAAMT,mBAAmBpE,MACrCM,UAAWiE,KAAKM,MAAMT,mBAAmB9D,YAE3C,kBAAC,EAAD,CACE4D,WAAYK,KAAKM,MAAMX,WACvB1D,QAAS+D,KAAKM,MAAMrE,QACpB6B,OAAQkC,KAAKM,MAAMxC,OACnB4B,mBAAoBM,KAAKM,MAAMZ,mBAC/BF,OAAQQ,KAAKM,MAAMd,e,GA1CSqB,IAAMC,WCRjCC,G,MAA4B,WAAO,IACtC7F,EAAMC,cAAND,EAER,OACE,4BAAQT,UAAU,gCAChB,2BAAOA,UAAU,aACdS,EAAE,UAAY,IACf,uBACER,KAAK,iCACLsG,OAAO,SACPC,IAAI,uBAHN,sB,QCFKC,EAAyC,SAAC5G,GACrD,OACE,kBAAC6G,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,MACXC,MAAO,CACLC,SAAU,QACVC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,WAEnBC,QAASrH,EAAMsH,gBAEdtH,EAAMX,W,gBChBPkI,EAAY,CAChBC,GAAI,CACFC,Y,OAEFC,GAAI,CACFD,Y,QAIJE,IAAKC,IAAIC,KAAkBC,KAAK,CAC9BP,YACAQ,IAAK,KACLC,cAAc,EACdC,OAAO,EACPC,cAAe,CACbC,aAAa,KAIFR,IClBVtE,EDkBUsE,IAAf,G,SClBKtE,K,QAAAA,E,SAAAA,M,KAUL,IAUqB+E,E,4MACnBpC,MAAmB,CACjB3G,SAAUgE,EAAUqE,GACpBJ,eAAgB,iBAA+B,OAAxB,EAAKtB,MAAM3G,SAAoB,EAAK+G,SAAS,CAAE/G,SAAUgE,EAAUqE,KAAQ,EAAKtB,SAAS,CAAE/G,SAAUgE,EAAUmE,O,uDAItI,OACE,6BACE,kBAAC,EAAD,CAAYnI,UAnBQA,EAmBqBqG,KAAKM,MAAM3G,SAlBtDA,IAAagE,EAAUmE,IACzBG,EAAKL,eAAejE,EAAUqE,IACvBrE,EAAUqE,KAGnBC,EAAKL,eAAejE,EAAUmE,IACvBnE,EAAUmE,OAaX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUnI,SAAUqG,KAAKM,MAAM3G,SAAUiI,eAAgB5B,KAAKM,MAAMsB,kBArBjD,IAACjI,M,GAUKkH,IAAMC,WCfnB6B,QACW,cAA7BrJ,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASoJ,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtJ,MAAK,SAACuJ,GACLA,EAAaC,gBAEdpJ,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAMoJ,c","file":"static/js/main.071350a0.chunk.js","sourcesContent":["export class Configuration {\n  static API_URL =\n    window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\"\n      ? \"http://localhost:3001\"\n      : \"https://jacob-resume-backend.herokuapp.com\";\n\n  static headers = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"*\",\n    \"content-type\": \"application/json\",\n  };\n}\n","import { Configuration } from \"../configuration/Configuration\";\n\nexport const getResume = (language: string): any => {\n  return fetch(`${Configuration.API_URL}/${language}`, { method: \"get\", headers: Configuration.headers })\n    .then((response) => response.json())\n    .then((result) => result)\n    .catch((error) => console.error(error));\n};\n","import React, { FunctionComponent } from \"react\";\nimport { IconType } from \"react-icons\";\nimport \"../../index.css\";\n\ninterface IContact {\n  title: string;\n  value: string;\n  icon: IconType;\n  isEMail: boolean;\n}\n\nexport const Contact: FunctionComponent<IContact> = (props) => {\n  const Icon: IconType = props.icon;\n\n  return (\n    <li className=\"mb-2\">\n      <a href={props.isEMail ? \"mailto:\" + props.value : \"#\"}>\n        <Icon className=\"fa-fw mr-2\" size=\"1.2em\" title={props.title} />\n        {props.value}\n      </a>\n    </li>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { IconType } from \"react-icons\";\nimport \"../../index.css\";\n\ninterface ILink {\n  title: string;\n  URL: string;\n  icon: IconType;\n}\n\nexport const Link: FunctionComponent<ILink> = (props) => {\n  const Icon: IconType = props.icon;\n\n  return (\n    <li className=\"mb-3\">\n      <a href={props.URL}>\n        <span className=\"fa-container text-center mr-2\">\n          <Icon className=\"fa-fw\" size=\"1.5em\" title={props.title} />\n        </span>\n        {props.URL}\n      </a>\n    </li>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { IGeneralInformation } from \"../../DTO/IGeneralInformation\";\nimport \"../../index.css\";\nimport { FaRegEnvelope, FaPhoneAlt, FaMobileAlt } from \"react-icons/fa\";\nimport { DiGithubBadge } from \"react-icons/di\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"./Contact\";\nimport { Link } from \"./Link\";\n\nexport const ResumeHeader: FunctionComponent<IGeneralInformation> = (props) => {\n  const { t } = useTranslation();\n\n  return (\n    <header className=\"resume-header pt-4 pt-md-0\">\n      <div className=\"media flex-column flex-md-row\">\n        <img\n          className=\"mr-3 img-fluid picture mx-auto\"\n          src=\"https://i.picsum.photos/id/501/480/480.jpg?hmac=8g-6-RpnvXpl1PmFBp-mJhkQa64DR7cxGJzJCXvxv6k\"\n          alt=\"profile\"\n        />\n        <div className=\"media-body p-4 d-flex flex-column flex-md-row mx-auto mx-lg-0\">\n          <div className=\"primary-info\">\n            <h1 className=\"name mt-0 mb-1 text-white text-uppercase\">{props.firstName + \" \" + props.lastName}</h1>\n            <div className=\"title mb-3\">{t(\"title\")}</div>\n            <ul className=\"list-unstyled\">\n              <Contact icon={FaRegEnvelope} title={t(\"email\")} value={props.email} isEMail={true} />\n              <Contact icon={FaPhoneAlt} title={t(\"homePhone\")} value={props.homePhone} isEMail={false} />\n              <Contact icon={FaMobileAlt} title={t(\"mobilePhone\")} value={props.mobilePhone} isEMail={false} />\n            </ul>\n          </div>\n          <div className=\"secondary-info ml-md-auto mt-2\">\n            <ul className=\"resume-social list-unstyled\">\n              <Link icon={DiGithubBadge} title=\"Github\" URL={props.githubURL} />\n            </ul>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport \"../../../index.css\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const AboutMe: FunctionComponent<{ aboutMe: Array<string> }> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <section className=\"resume-section summary-section mb-5\">\n      <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">{t(\"aboutMe\")}</h2>\n      <div className=\"resume-section-content\">\n        <p>\n          {t(\"introduction\") + \": \"}\n          {props.aboutMe.join(\" - \")}\n        </p>\n      </div>\n    </section>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../index.css\";\n\nexport const Description: FunctionComponent<{ description: Array<string>; stacks: Array<string> }> = (props) => {\n  const { t } = useTranslation();\n\n  const listDescriptions = props.description.map((item, index) => <li key={index}>{item}</li>);\n\n  const listStacks = props.stacks.map((item, index) => (\n    <li key={index} className=\"list-inline-item\">\n      <span className=\"badge badge-primary badge-pill\">{item}</span>\n    </li>\n  ));\n\n  return (\n    <div className=\"resume-timeline-item-desc\">\n      <h4 className=\"resume-timeline-item-desc-heading font-weight-bold\">{t(\"description\")}</h4>\n      <ul>{listDescriptions}</ul>\n      <h4 className=\"resume-timeline-item-desc-heading font-weight-bold\">{t(\"technologieUsed\")}</h4>\n      <ul className=\"list-inline\">{listStacks}</ul>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport \"../../../index.css\";\n\ninterface JobPosition {\n  title: string;\n  compagny: string;\n  city: string;\n  startMonth: string;\n  startYear: number;\n  endMonth: string;\n  endYear: number;\n}\n\nexport const Position: FunctionComponent<JobPosition> = (props) => {\n  return (\n    <div className=\"resume-timeline-item-header mb-2\">\n      <div className=\"d-flex flex-column flex-md-row\">\n        <h3 className=\"resume-position-title font-weight-bold mb-1\">{props.title}</h3>\n        <div className=\"resume-company-name ml-auto\">{props.compagny + \", \" + props.city}</div>\n      </div>\n      <div className=\"resume-position-time\">\n        {props.startMonth + \" \" + props.startYear + \" - \" + props.endMonth + \" \" + props.endYear}\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { IWorkingExperience } from \"../../../DTO/IWorkingExperience\";\nimport \"../../../index.css\";\nimport { Description } from \"./Description\";\nimport { Position } from \"./Position\";\n\nexport const Work: FunctionComponent<{ workingExperience: IWorkingExperience }> = (props) => {\n  return (\n    <article className=\"resume-timeline-item position-relative pb-5\">\n      <Position\n        title={props.workingExperience.title}\n        compagny={props.workingExperience.compagny}\n        city={props.workingExperience.city}\n        startMonth={props.workingExperience.startMonth}\n        startYear={props.workingExperience.startYear}\n        endMonth={props.workingExperience.endMonth}\n        endYear={props.workingExperience.endYear}\n      />\n      <Description description={props.workingExperience.description} stacks={props.workingExperience.Stacks} />\n    </article>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IWorkingExperience } from \"../../../DTO/IWorkingExperience\";\nimport \"../../../index.css\";\nimport { Work } from \"./Work\";\n\nexport const WorkingExperiences: FunctionComponent<{ workingExperieces: Array<IWorkingExperience> }> = (props) => {\n  const { t } = useTranslation();\n\n  const listWorks = props.workingExperieces.map((item, index) => <Work workingExperience={item} key={index} />);\n\n  return (\n    <section className=\"resume-section experience-section mb-5\">\n      <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">{t(\"workExperience\")}</h2>\n      <div className=\"resume-section-content\">\n        <div className=\"resume-timeline position-relative\">{listWorks}</div>\n      </div>\n    </section>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport \"../../../index.css\";\n\nexport const Languages: FunctionComponent<{ languages: Array<string> }> = (props) => {\n  const listLanguages = props.languages.map((item, index) => (\n    <li className=\"mb-2\" key={index}>\n      <span className=\"resume-lang-name font-weight-bold\">{item} </span>\n    </li>\n  ));\n\n  return <ul className=\"list-unstyled resume-lang-list\">{listLanguages}</ul>;\n};\n","import React, { FunctionComponent } from \"react\";\nimport \"../../../index.css\";\n\nexport const SkillSets: FunctionComponent<{ title: string; skills: Array<string> }> = (props) => {\n  const itemSkills = props.skills.map((item, index) => (\n    <li className=\"list-inline-item\" key={index}>\n      <span className=\"badge badge-light\">{item}</span>\n    </li>\n  ));\n\n  return (\n    <div className=\"resume-skill-item\">\n      <h4 className=\"resume-skills-cat font-weight-bold\">{props.title}</h4>\n      <ul className=\"list-inline\">{itemSkills}</ul>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ISkills } from \"../../../DTO/ISkills\";\nimport \"../../../index.css\";\nimport { Languages } from \"./Languages\";\nimport { SkillSets } from \"./SkillSets\";\n\nexport const Skills: FunctionComponent<ISkills> = (props) => {\n  const geomaticsSkills: Array<string> = props.technical.geomatics.CAD.concat(\n    props.technical.geomatics.GIS,\n    props.technical.geomatics.other\n  );\n\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <section className=\"resume-section skills-section mb-5\">\n        <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">{t(\"skills\")}</h2>\n        <div className=\"resume-section-content\">\n          <SkillSets title={\"Office\"} skills={props.technical.office} />\n          <SkillSets title={t(\"geomatics\")} skills={geomaticsSkills} />\n          <SkillSets title={t(\"programming\")} skills={props.technical.computerScience.programmingLanguages} />\n          <SkillSets title={t(\"framework\")} skills={props.technical.computerScience.frameworks} />\n          <SkillSets title={t(\"tools\")} skills={props.technical.computerScience.tools} />\n        </div>\n      </section>\n      <section className=\"resume-section skills-section mb-5\">\n        <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">{t(\"languages\")}</h2>\n        <div className=\"resume-section-content\">\n          <Languages languages={props.languages} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IEducation } from \"../../../DTO/IEducation\";\nimport \"../../../index.css\";\n\nexport const Education: FunctionComponent<{ education: Array<IEducation> }> = (props) => {\n  const { t } = useTranslation();\n\n  const listEducation = props.education.map((item, index) => (\n    <li className=\"mb-2\" key={index}>\n      <div className=\"resume-degree font-weight-bold\">{item.degree}</div>\n      <div className=\"resume-degree-org\">{item.schoolName + \",  \" + item.city}</div>\n      <div className=\"resume-degree-time\">{item.startYear + \" - \" + item.endYear}</div>\n    </li>\n  ));\n\n  return (\n    <section className=\"resume-section education-section mb-5\">\n      <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">{t(\"education\")}</h2>\n      <div className=\"resume-section-content\">\n        <ul className=\"list-unstyled\">{listEducation}</ul>\n      </div>\n    </section>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IEvent } from \"../../../DTO/IEvent\";\n\nexport const Event: FunctionComponent<IEvent> = (props) => {\n  const { t } = useTranslation();\n\n  const description = props.description.map((item, index) => <li key={index}>{item}</li>);\n\n  return (\n    <article className=\"position-relative pb-5\">\n      <div className=\"resume-timeline-item-header mb-2\">\n        <div className=\"d-flex flex-column flex-md-row\">\n          <h3 className=\"resume-position-title font-weight-bold mb-1\">{props.title}</h3>\n          <div className=\"resume-company-name ml-auto\">{props.location.building + \", \" + props.location.address}</div>\n        </div>\n        <div className=\"resume-position-time\">{props.startDate + \" - \" + props.endDate}</div>\n      </div>\n      <div className=\"resume-timeline-item-desc\">\n        <h4 className=\"resume-timeline-item-desc-heading font-weight-bold\">{t(\"description\")}</h4>\n        <ul>{description}</ul>\n      </div>\n    </article>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IEvent } from \"../../../DTO/IEvent\";\nimport { Event } from \"./Event\";\nexport const Events: FunctionComponent<{ events: Array<IEvent> }> = (props) => {\n  const { t } = useTranslation();\n\n  const listEvents = props.events.map((item, index) => (\n    <Event\n      key={index}\n      title={item.title}\n      description={item.description}\n      location={item.location}\n      startDate={item.startDate}\n      endDate={item.endDate}\n    />\n  ));\n\n  return (\n    <section className=\"resume-section reference-section mb-5\">\n      <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">{t(\"events\")}</h2>\n      <div className=\"resume-section-content\">\n        <div className=\"position-relative\">{listEvents}</div>\n      </div>\n    </section>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { IEducation } from \"../../DTO/IEducation\";\nimport { ISkills } from \"../../DTO/ISkills\";\nimport { IWorkingExperience } from \"../../DTO/IWorkingExperience\";\nimport { IEvent } from \"../../DTO/IEvent\";\nimport { AboutMe } from \"./aboutMe/AboutMe\";\nimport { WorkingExperiences } from \"./workingExperiences/WorkingExperiences\";\nimport { Skills } from \"./skills/Skills\";\nimport { Education } from \"./education/Education\";\nimport \"../../index.css\";\nimport { Events } from \"./events/Events\";\n\ninterface ContentBody {\n  educations: Array<IEducation>;\n  aboutMe: Array<string>;\n  skills: ISkills;\n  workingExperiences: Array<IWorkingExperience>;\n  events: Array<IEvent>;\n}\n\nexport const ResumeBody: FunctionComponent<ContentBody> = (props) => {\n  return (\n    <div className=\"resume-body p-5\">\n      <AboutMe aboutMe={props.aboutMe} />\n      <div className=\"row\">\n        <div className=\"col-lg-9\">\n          <WorkingExperiences workingExperieces={props.workingExperiences} />\n          <Events events={props.events} />\n        </div>\n        <div className=\"col-lg-3\">\n          <Skills languages={props.skills.languages} technical={props.skills.technical} />\n          <Education education={props.educations} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { IEducation } from \"../../../DTO/IEducation\";\nimport { IEvent } from \"../../../DTO/IEvent\";\nimport { IGeneralInformation } from \"../../../DTO/IGeneralInformation\";\nimport { IResume } from \"../../../DTO/IResume\";\nimport { ISkills } from \"../../../DTO/ISkills\";\nimport { IWorkingExperience } from \"../../../DTO/IWorkingExperience\";\n\nexport class FactoryResume {\n  private createGeneralInformation(generalInformation?: any): IGeneralInformation {\n    if (generalInformation) {\n      return generalInformation as IGeneralInformation;\n    }\n    return {\n      address: \"\",\n      city: \"\",\n      email: \"\",\n      firstName: \"\",\n      githubURL: \"\",\n      homePhone: \"\",\n      lastName: \"\",\n      mobilePhone: \"\",\n      postalCode: \"\",\n      province: \"\",\n    };\n  }\n\n  private createSkills(skills?: any): ISkills {\n    if (skills) {\n      return skills as ISkills;\n    }\n    return {\n      languages: [],\n      technical: {\n        office: [],\n        computerScience: {\n          frameworks: [],\n          programmingLanguages: [],\n          tools: [],\n        },\n        geomatics: { CAD: [], GIS: [], other: [] },\n      },\n    };\n  }\n\n  public initializeResume(): IResume {\n    return {\n      educations: [],\n      generalInformation: this.createGeneralInformation(),\n      events: [],\n      skills: this.createSkills(),\n      workingExperiences: [],\n      aboutMe: [],\n    };\n  }\n\n  public createResume(data: any): IResume {\n    return {\n      educations: data.education ? (data.education as Array<IEducation>) : [],\n      generalInformation: this.createGeneralInformation(data.generalInformation),\n      events: data.events ? (data.events as Array<IEvent>) : [],\n      skills: this.createSkills(data.skills),\n      workingExperiences: data.workingExperiences ? (data.workingExperiences as Array<IWorkingExperience>) : [],\n      aboutMe: data.aboutMe ? (data.aboutMe as Array<string>) : [],\n    };\n  }\n}\n","import React from \"react\";\nimport { IResume } from \"../../DTO/IResume\";\nimport * as api from \"../../api/resumeApi\";\nimport { ResumeHeader } from \"../resumeHeader/ResumeHeader\";\nimport \"../../index.css\";\nimport { ResumeBody } from \"../resumeBody/ResumeBody\";\nimport { FactoryResume } from \"./factory/FactoryResume\";\n\ninterface ILanguage {\n  language: string;\n}\n\nexport default class MyDocument extends React.Component<ILanguage, IResume> {\n  private resumeFactory: FactoryResume;\n\n  constructor(props: ILanguage) {\n    super(props);\n    this.resumeFactory = new FactoryResume();\n    this.state = this.resumeFactory.initializeResume();\n  }\n\n  async componentDidMount() {\n    const dataResume = await api.getResume(this.props.language);\n    this.setState(this.resumeFactory.createResume(dataResume));\n  }\n\n  async componentDidUpdate(prevProps: ILanguage) {\n    if (this.props.language !== prevProps.language) {\n      const dataResume = await api.getResume(this.props.language);\n      this.setState(this.resumeFactory.createResume(dataResume));\n    }\n  }\n\n  public render() {\n    return (\n      <article className=\"resume-wrapper text-center position-relative\">\n        <div className=\"resume-wrapper-inner mx-auto text-left bg-white shadow-lg\">\n          <ResumeHeader\n            firstName={this.state.generalInformation.firstName}\n            lastName={this.state.generalInformation.lastName}\n            address={this.state.generalInformation.address}\n            city={this.state.generalInformation.city}\n            province={this.state.generalInformation.province}\n            postalCode={this.state.generalInformation.postalCode}\n            mobilePhone={this.state.generalInformation.mobilePhone}\n            homePhone={this.state.generalInformation.homePhone}\n            email={this.state.generalInformation.email}\n            githubURL={this.state.generalInformation.githubURL}\n          />\n          <ResumeBody\n            educations={this.state.educations}\n            aboutMe={this.state.aboutMe}\n            skills={this.state.skills}\n            workingExperiences={this.state.workingExperiences}\n            events={this.state.events}\n          />\n        </div>\n      </article>\n    );\n  }\n}\n","import React, { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../../index.css\";\n\nexport const Credit: FunctionComponent = () => {\n  const { t } = useTranslation();\n\n  return (\n    <footer className=\"footer text-center pt-2 pb-5\">\n      <small className=\"copyright\">\n        {t(\"credit\") + \" \"}\n        <a\n          href=\"http://themes.3rdwavemedia.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Xiaoying Riley\n        </a>\n      </small>\n    </footer>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\n\nimport Fab from \"@material-ui/core/Fab\";\n\ninterface ILanguage {\n  language: string;\n  changeLanguage: () => void;\n}\n\nexport const Language: FunctionComponent<ILanguage> = (props) => {\n  return (\n    <Fab\n      color=\"primary\"\n      aria-label=\"add\"\n      style={{\n        position: \"fixed\",\n        bottom: \"10px\",\n        right: \"50px\",\n        backgroundColor: \"#22A162\",\n      }}\n      onClick={props.changeLanguage}\n    >\n      {props.language}\n    </Fab>\n  );\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport translationEN from \"../locales/en/translation.json\";\nimport translationFR from \"../locales/fr/translation.json\";\n\nconst resources = {\n  EN: {\n    translation: translationEN,\n  },\n  FR: {\n    translation: translationFR,\n  },\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"EN\",\n  keySeparator: false,\n  debug: true,\n  interpolation: {\n    escapeValue: false,\n  },\n});\n\nexport default i18n;\n","import React from \"react\";\nimport MyDocument from \"./components/page/MyDocument\";\nimport \"./App.css\";\nimport { Credit } from \"./components/page/Credit\";\nimport { Language } from \"./components/page/Language\";\nimport i18n from \"./i18n/i18n\";\n\nenum languages {\n  EN = \"EN\",\n  FR = \"FR\",\n}\n\ninterface ILanguage {\n  language: languages;\n  changeLanguage: () => void;\n}\n\nconst getOppsiteLanguage = (language: string): string => {\n  if (language === languages.EN) {\n    i18n.changeLanguage(languages.FR);\n    return languages.FR;\n  }\n\n  i18n.changeLanguage(languages.EN);\n  return languages.EN;\n};\n\nexport default class App extends React.Component<{}, ILanguage> {\n  state: ILanguage = {\n    language: languages.FR,\n    changeLanguage: () => (this.state.language === \"EN\" ? this.setState({ language: languages.FR }) : this.setState({ language: languages.EN })),\n  };\n\n  public render() {\n    return (\n      <div>\n        <MyDocument language={getOppsiteLanguage(this.state.language)} />\n        <Credit />\n        <Language language={this.state.language} changeLanguage={this.state.changeLanguage} />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}